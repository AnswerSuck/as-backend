syntax = "proto3";

package question.v1;
option go_package = "question/v1;questionv1";

import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

service QuestionService {
    rpc CreateQuestion(CreateQuestionRequest) returns (CreateQuestionResponse);
    rpc GetQuestion(GetQuestionRequest) returns (GetQuestionResponse);
}

message Question {
    message Answer {
        int32 id = 1;
        string text = 2;
        string media_url = 3;
        string author = 4;
        google.protobuf.Timestamp create_time = 50;
    }

    int32 id = 1;
    string text = 2;
    Answer answer = 3;
    string author = 4;
    string media_url = 5;
    google.protobuf.Timestamp create_time = 50;
}

message CreateQuestionRequest {
    message Answer {
        string text = 1 [(validate.rules).string = { min_len: 3, max_len: 100 }]; // required
        string media_url = 2 [(validate.rules).string = { uri: true }];
    }

    string question = 1 [(validate.rules).string = { min_len: 3, max_len: 200 }]; // required
    Answer answer = 2 [(validate.rules).message = { required: true }]; // required
    string media_url = 3 [(validate.rules).string = { uri: true }];
}

message CreateQuestionResponse {
    Question question = 1;
}

message GetQuestionRequest {
    int32 question_id = 1; // required
}

message GetQuestionResponse {
    Question question = 1;
}