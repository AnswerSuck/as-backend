syntax = "proto3";

package player.v1;
option go_package = "player/v1;playerv1";

import "validate/validate.proto";
import "google/protobuf/empty.proto";

// PasswordService is a service for managing player password.
service PasswordService {
  // ResetPasswordByNickname sends an email to player email with short-term token
  // which may be used for updating the password.
  rpc ResetPassword (ResetPasswordRequest) returns (google.protobuf.Empty);
  
  // SetPassword sets new player password by using token from ResetPassword rpc method.
  rpc SetPassword (SetPasswordRequest) returns (google.protobuf.Empty);

  // UpdatePassword updates player password if old one is correct.
  rpc UpdatePassword (UpdatePasswordRequest) returns (google.protobuf.Empty);
}

message ResetPasswordRequest {
  string login = 1; // required, email or nickname
}

message SetPasswordRequest {
  string token = 1 [(validate.rules).string = { min_len: 10, max_len: 500 }]; // required
  string new_password = 2 [(validate.rules).string = { min_len: 10, max_len: 64 }]; // required
}

message UpdatePasswordRequest {
  string old_password = 1; // required
  string new_password = 2 [(validate.rules).string = { min_len: 10, max_len: 64 }]; // required
}