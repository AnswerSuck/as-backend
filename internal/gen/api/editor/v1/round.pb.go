// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: editor/v1/round.proto

package editorv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRoundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackId        int32  `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`                      // required
	RoundName     string `protobuf:"bytes,2,opt,name=round_name,json=roundName,proto3" json:"round_name,omitempty"`              // required
	RoundPosition int32  `protobuf:"varint,3,opt,name=round_position,json=roundPosition,proto3" json:"round_position,omitempty"` // required
}

func (x *CreateRoundRequest) Reset() {
	*x = CreateRoundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoundRequest) ProtoMessage() {}

func (x *CreateRoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoundRequest.ProtoReflect.Descriptor instead.
func (*CreateRoundRequest) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRoundRequest) GetPackId() int32 {
	if x != nil {
		return x.PackId
	}
	return 0
}

func (x *CreateRoundRequest) GetRoundName() string {
	if x != nil {
		return x.RoundName
	}
	return ""
}

func (x *CreateRoundRequest) GetRoundPosition() int32 {
	if x != nil {
		return x.RoundPosition
	}
	return 0
}

type CreateRoundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pack *Pack `protobuf:"bytes,1,opt,name=pack,proto3" json:"pack,omitempty"`
}

func (x *CreateRoundResponse) Reset() {
	*x = CreateRoundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoundResponse) ProtoMessage() {}

func (x *CreateRoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoundResponse.ProtoReflect.Descriptor instead.
func (*CreateRoundResponse) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoundResponse) GetPack() *Pack {
	if x != nil {
		return x.Pack
	}
	return nil
}

type UpdateRoundPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundId       int32 `protobuf:"varint,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`                   // required
	RoundPosition int32 `protobuf:"varint,2,opt,name=round_position,json=roundPosition,proto3" json:"round_position,omitempty"` // required
}

func (x *UpdateRoundPositionRequest) Reset() {
	*x = UpdateRoundPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoundPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoundPositionRequest) ProtoMessage() {}

func (x *UpdateRoundPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoundPositionRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoundPositionRequest) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRoundPositionRequest) GetRoundId() int32 {
	if x != nil {
		return x.RoundId
	}
	return 0
}

func (x *UpdateRoundPositionRequest) GetRoundPosition() int32 {
	if x != nil {
		return x.RoundPosition
	}
	return 0
}

type ListRoundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackId int32 `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"` // required
}

func (x *ListRoundsRequest) Reset() {
	*x = ListRoundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoundsRequest) ProtoMessage() {}

func (x *ListRoundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoundsRequest.ProtoReflect.Descriptor instead.
func (*ListRoundsRequest) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{3}
}

func (x *ListRoundsRequest) GetPackId() int32 {
	if x != nil {
		return x.PackId
	}
	return 0
}

type ListRoundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rounds []*ListRoundsResponse_Round `protobuf:"bytes,1,rep,name=rounds,proto3" json:"rounds,omitempty"`
}

func (x *ListRoundsResponse) Reset() {
	*x = ListRoundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoundsResponse) ProtoMessage() {}

func (x *ListRoundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoundsResponse.ProtoReflect.Descriptor instead.
func (*ListRoundsResponse) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{4}
}

func (x *ListRoundsResponse) GetRounds() []*ListRoundsResponse_Round {
	if x != nil {
		return x.Rounds
	}
	return nil
}

type AddTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundId int32 `protobuf:"varint,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"` // required
	TopicId int32 `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"` // required
}

func (x *AddTopicRequest) Reset() {
	*x = AddTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTopicRequest) ProtoMessage() {}

func (x *AddTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTopicRequest.ProtoReflect.Descriptor instead.
func (*AddTopicRequest) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{5}
}

func (x *AddTopicRequest) GetRoundId() int32 {
	if x != nil {
		return x.RoundId
	}
	return 0
}

func (x *AddTopicRequest) GetTopicId() int32 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type RemoveTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundId int32 `protobuf:"varint,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"` // required
	TopicId int32 `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"` // required
}

func (x *RemoveTopicRequest) Reset() {
	*x = RemoveTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTopicRequest) ProtoMessage() {}

func (x *RemoveTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTopicRequest.ProtoReflect.Descriptor instead.
func (*RemoveTopicRequest) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveTopicRequest) GetRoundId() int32 {
	if x != nil {
		return x.RoundId
	}
	return 0
}

func (x *RemoveTopicRequest) GetTopicId() int32 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetQuestionGridRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundId int32 `protobuf:"varint,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"` // required
}

func (x *GetQuestionGridRequest) Reset() {
	*x = GetQuestionGridRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionGridRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionGridRequest) ProtoMessage() {}

func (x *GetQuestionGridRequest) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionGridRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionGridRequest) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{7}
}

func (x *GetQuestionGridRequest) GetRoundId() int32 {
	if x != nil {
		return x.RoundId
	}
	return 0
}

type GridQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text string            `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Type RoundQuestionType `protobuf:"varint,3,opt,name=type,proto3,enum=editor.v1.RoundQuestionType" json:"type,omitempty"`
	Cost int32             `protobuf:"varint,4,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *GridQuestion) Reset() {
	*x = GridQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GridQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GridQuestion) ProtoMessage() {}

func (x *GridQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GridQuestion.ProtoReflect.Descriptor instead.
func (*GridQuestion) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{8}
}

func (x *GridQuestion) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GridQuestion) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GridQuestion) GetType() RoundQuestionType {
	if x != nil {
		return x.Type
	}
	return RoundQuestionType_ROUND_QUESTION_TYPE_UNSPECIFIED
}

func (x *GridQuestion) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

type GridTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Questions []*GridQuestion `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GridTopic) Reset() {
	*x = GridTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GridTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GridTopic) ProtoMessage() {}

func (x *GridTopic) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GridTopic.ProtoReflect.Descriptor instead.
func (*GridTopic) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{9}
}

func (x *GridTopic) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GridTopic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GridTopic) GetQuestions() []*GridQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type GetQuestionGridResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics []*GridTopic `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *GetQuestionGridResponse) Reset() {
	*x = GetQuestionGridResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionGridResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionGridResponse) ProtoMessage() {}

func (x *GetQuestionGridResponse) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionGridResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionGridResponse) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{10}
}

func (x *GetQuestionGridResponse) GetTopics() []*GridTopic {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ListRoundsResponse_Round struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListRoundsResponse_Round) Reset() {
	*x = ListRoundsResponse_Round{}
	if protoimpl.UnsafeEnabled {
		mi := &file_editor_v1_round_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoundsResponse_Round) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoundsResponse_Round) ProtoMessage() {}

func (x *ListRoundsResponse_Round) ProtoReflect() protoreflect.Message {
	mi := &file_editor_v1_round_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoundsResponse_Round.ProtoReflect.Descriptor instead.
func (*ListRoundsResponse_Round) Descriptor() ([]byte, []int) {
	return file_editor_v1_round_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListRoundsResponse_Round) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListRoundsResponse_Round) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_editor_v1_round_proto protoreflect.FileDescriptor

var file_editor_v1_round_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x1a, 0x14, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x1e, 0x52, 0x09, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x52, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x22, 0x5e, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0x2b, 0x0a, 0x05, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x33, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x49, 0x64, 0x22, 0x78, 0x0a, 0x0c, 0x47, 0x72, 0x69, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x09,
	0x47, 0x72, 0x69, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x35, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x69, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x47, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x69, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x32,
	0xdd, 0x03, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x1d, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x12, 0x1c, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1a, 0x2e, 0x65, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x44, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1d,
	0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x12, 0x21, 0x2e, 0x65, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x72, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x14, 0x5a, 0x12, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_editor_v1_round_proto_rawDescOnce sync.Once
	file_editor_v1_round_proto_rawDescData = file_editor_v1_round_proto_rawDesc
)

func file_editor_v1_round_proto_rawDescGZIP() []byte {
	file_editor_v1_round_proto_rawDescOnce.Do(func() {
		file_editor_v1_round_proto_rawDescData = protoimpl.X.CompressGZIP(file_editor_v1_round_proto_rawDescData)
	})
	return file_editor_v1_round_proto_rawDescData
}

var file_editor_v1_round_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_editor_v1_round_proto_goTypes = []interface{}{
	(*CreateRoundRequest)(nil),         // 0: editor.v1.CreateRoundRequest
	(*CreateRoundResponse)(nil),        // 1: editor.v1.CreateRoundResponse
	(*UpdateRoundPositionRequest)(nil), // 2: editor.v1.UpdateRoundPositionRequest
	(*ListRoundsRequest)(nil),          // 3: editor.v1.ListRoundsRequest
	(*ListRoundsResponse)(nil),         // 4: editor.v1.ListRoundsResponse
	(*AddTopicRequest)(nil),            // 5: editor.v1.AddTopicRequest
	(*RemoveTopicRequest)(nil),         // 6: editor.v1.RemoveTopicRequest
	(*GetQuestionGridRequest)(nil),     // 7: editor.v1.GetQuestionGridRequest
	(*GridQuestion)(nil),               // 8: editor.v1.GridQuestion
	(*GridTopic)(nil),                  // 9: editor.v1.GridTopic
	(*GetQuestionGridResponse)(nil),    // 10: editor.v1.GetQuestionGridResponse
	(*ListRoundsResponse_Round)(nil),   // 11: editor.v1.ListRoundsResponse.Round
	(*Pack)(nil),                       // 12: editor.v1.Pack
	(RoundQuestionType)(0),             // 13: editor.v1.RoundQuestionType
	(*emptypb.Empty)(nil),              // 14: google.protobuf.Empty
}
var file_editor_v1_round_proto_depIdxs = []int32{
	12, // 0: editor.v1.CreateRoundResponse.pack:type_name -> editor.v1.Pack
	11, // 1: editor.v1.ListRoundsResponse.rounds:type_name -> editor.v1.ListRoundsResponse.Round
	13, // 2: editor.v1.GridQuestion.type:type_name -> editor.v1.RoundQuestionType
	8,  // 3: editor.v1.GridTopic.questions:type_name -> editor.v1.GridQuestion
	9,  // 4: editor.v1.GetQuestionGridResponse.topics:type_name -> editor.v1.GridTopic
	0,  // 5: editor.v1.RoundService.CreateRound:input_type -> editor.v1.CreateRoundRequest
	2,  // 6: editor.v1.RoundService.UpdateRoundPosition:input_type -> editor.v1.UpdateRoundPositionRequest
	3,  // 7: editor.v1.RoundService.ListRounds:input_type -> editor.v1.ListRoundsRequest
	5,  // 8: editor.v1.RoundService.AddTopic:input_type -> editor.v1.AddTopicRequest
	6,  // 9: editor.v1.RoundService.RemoveTopic:input_type -> editor.v1.RemoveTopicRequest
	7,  // 10: editor.v1.RoundService.GetQuestionGrid:input_type -> editor.v1.GetQuestionGridRequest
	1,  // 11: editor.v1.RoundService.CreateRound:output_type -> editor.v1.CreateRoundResponse
	14, // 12: editor.v1.RoundService.UpdateRoundPosition:output_type -> google.protobuf.Empty
	4,  // 13: editor.v1.RoundService.ListRounds:output_type -> editor.v1.ListRoundsResponse
	14, // 14: editor.v1.RoundService.AddTopic:output_type -> google.protobuf.Empty
	14, // 15: editor.v1.RoundService.RemoveTopic:output_type -> google.protobuf.Empty
	10, // 16: editor.v1.RoundService.GetQuestionGrid:output_type -> editor.v1.GetQuestionGridResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_editor_v1_round_proto_init() }
func file_editor_v1_round_proto_init() {
	if File_editor_v1_round_proto != nil {
		return
	}
	file_editor_v1_pack_proto_init()
	file_editor_v1_round_question_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_editor_v1_round_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoundPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionGridRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GridQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GridTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionGridResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_editor_v1_round_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoundsResponse_Round); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_editor_v1_round_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_editor_v1_round_proto_goTypes,
		DependencyIndexes: file_editor_v1_round_proto_depIdxs,
		MessageInfos:      file_editor_v1_round_proto_msgTypes,
	}.Build()
	File_editor_v1_round_proto = out.File
	file_editor_v1_round_proto_rawDesc = nil
	file_editor_v1_round_proto_goTypes = nil
	file_editor_v1_round_proto_depIdxs = nil
}
