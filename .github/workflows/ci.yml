name: CI

on: pull_request

jobs:

  tests:
    name: runner / tests
    runs-on: ubuntu-latest

    services:

      postgres:
        image: "postgres:14-alpine"
        env:
          POSTGRES_USER: "user"
          POSTGRES_PASSWORD: "pass"
          POSTGRES_DB: "postgres"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      app:
        image: app
        build: .
        environment:
          - PG_URL=${{ secrets.TEST_PG_URL }}
          - SMTP_FROM=${{ secrets.TEST_SMTP_FROM }}
          - SMTP_PASSWORD=${{ secrets.TEST_SMTP_PASSWORD }}
          - FILE_STORAGE_ACCESS_KEY=${{ secrets.TEST_FILE_STORAGE_ACCESS_KEY }}
          - FILE_STORAGE_SECRET_KEY=${{ secrets.TEST_FILE_STORAGE_SECRET_KEY }}
        ports:
          - "8080:8080"
        depends_on:
          - postgres

    steps:
    - uses: actions/checkout@v3

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Unit tests
      run: "go test \
        -v \
        -race \
        -covermode atomic \
        -coverprofile=coverage.txt \
        ./internal/... \
        ./pkg/..."
    - name: Upload coverage report
      run: bash <(curl -s https://codecov.io/bash)

    - name: Build and run app
      run: go run ./cmd/app

    - name: Integration tests
      run: go test -v -race -count 1 ./test/...
      env:
        PG_URL: ${{ secrets.TEST_PG_URL }}
